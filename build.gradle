plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	// 스프링 부트 기본 의존성
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'  // WebClient 사용을 위해
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// Reactive 웹 클라이언트 의존성
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'io.projectreactor:reactor-core'
	implementation 'io.projectreactor.netty:reactor-netty'

	// MyBatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Database
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// API 문서화 (SpringDoc OpenAPI 3)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// 테스트 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.7.0'
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// 이미지 처리
	implementation 'org.apache.commons:commons-imaging:1.0-alpha2'

	// JSON 처리
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

tasks.named('bootJar') {
	archiveFileName = "${project.name}.jar"
}

// 의존성 버전 충돌 확인
tasks.named('dependencies') {
	doLast {
		configurations.runtimeClasspath.resolvedConfiguration.resolvedArtifacts.each { artifact ->
			println "${artifact.name}:${artifact.version}"
		}
	}
}

// 메모리 설정 (선택사항)
tasks.withType(JavaExec) {
	jvmArgs = ['-Xmx4g']  // 최대 힙 메모리 4GB
}
